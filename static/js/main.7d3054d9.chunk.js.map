{"version":3,"sources":["hoc/withAuthRedirect.jsx","redux/actions/dialog-actions.js","components/Users/Users.module.css","components/Profile/MyPosts/Post/Post.module.css","hoc/withSuspense.jsx","components/Navbar/Navbar.jsx","components/common/Paginator/Paginator.jsx","assets/images/person.jpg","components/Users/User.jsx","components/Users/Users.jsx","assets/images/preloader.gif","components/common/Preloader/Preloader.jsx","redux/actions/users-actions.js","api/api.js","utils/object-helpers.js","redux/reducers/users-reducer.js","redux/selectors/users-selectors.js","components/Users/UsersContainer.jsx","redux/actions/profile-actions.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","redux/reducers/profile-reducer.js","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/actions/auth-actions.js","redux/reducers/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/actions/app-actions.js","redux/reducers/app-reducer.js","App.js","redux/reducers/dialogs-reducer.js","redux/reducers/sidebar-reducer.js","redux/redux-store.js","reportWebVitals.js","index.js","utils/validators/validators.js","components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","components/common/Paginator/Paginator.module.css","components/Navbar/Navbar.module.css","components/Header/Header.module.css"],"names":["withAuthRedirect","Component","RedirectComponent","this","props","isAuth","to","React","connect","state","auth","SEND_MESSAGE","sendMessageClick","newMessageBody","type","module","exports","Navbar","setActive","isActive","c","activeLink","className","nav","exact","Paginator","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","style","paginator","onClick","filter","p","map","cn","selectedPage","pageNumber","e","User","user","followingInProgress","follow","unfollow","id","alt","name","src","photos","small","personPhoto","userPhoto","followed","disabled","some","status","Users","totalUsersCount","users","Preloader","preloader","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","userId","setUsers","toggleIsFetching","isFetching","toggleFollowingProgress","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","get","then","response","data","post","delete","profileAPI","put","authAPI","email","password","rememberMe","updateObjectInArray","items","itemId","objPropName","newObjProps","item","initialState","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","action","getUsersSelector","usersPage","getPageSizeSelector","createSelector","getCurrentPageSelector","getTotalUsersCountSelector","getIsFetchingSelector","getFollowingInProgressSelector","UsersContainer","changeUserPageThunkCreator","followThunkCreator","unfollowThunkCreator","getUserThunkCreator","compose","length","totalCount","bind","ADD_POST","SET_USER_PROFILE","SET_USER_STATUS","DELETE_POST","setUserStatus","Post","message","maxLength10","maxLengthCreator","AddNewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","requiredField","MyPosts","value","addPost","newPostText","posts","MyPostsContainer","profilePage","ProfileStatusWithHooks","editMode","setEditMode","setStatus","useEffect","autoFocus","onBlur","updateUserStatus","onChange","target","onDoubleClick","ProfileInfo","userProfile","large","personalId","Profile","updateUserStatusThunkCreator","likesCount","profileReducer","newPost","postId","ProfileObtained","getUserProfileThunkCreator","getUserStatusThunkCreator","useParams","Header","header","loginBlock","login","logoutThunkCreator","SET_USER_DATA","setUserData","getMeThunkCreator","authReducer","HeaderContainer","LoginReduxForm","error","Input","errorSummary","loginThunkCreator","messages","stopSubmit","_error","formData","SET_INITIALIZED_SUCCESS","initialized","appReducer","SuspenseDialogs","lazy","Suspense","fallback","App","initializeApp","path","element","app","dialogs","dialogsReducer","newMessage","sidebarReducer","reducers","combineReducers","dialogsPage","sidebar","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","maxLength","FormControl","input","meta","FormType","hasError","touched","formControl"],"mappings":"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","file":"static/js/main.7d3054d9.chunk.js","sourcesContent":["import {Navigate} from \"react-router\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) {\r\n                return <Navigate to={'/login'} />\r\n            }\r\n        \r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let mapStateToPropsForRedirect = (state) => {\r\n        return {\r\n            isAuth: state.auth.isAuth\r\n        }\r\n    }\r\n    \r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}","export const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nexport const sendMessageClick = (newMessageBody) => ({\r\n    type: SEND_MESSAGE,\r\n    newMessageBody\r\n});","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__3PKnI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__q3TDi\"};","import React from \"react\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => (\r\n        <React.Suspense fallback={<div>...Loading</div>}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    )\r\n}","import c from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    const setActive = ({ isActive }) =>(isActive ? c.activeLink : null);\r\n    return (\r\n        <nav className={c.nav}>\r\n            <div>\r\n                <NavLink to='/profile' className={setActive}>Profile</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink exact to='/dialogs' className={setActive}>Messages</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink exact to='/users' className={setActive}>Users</NavLink>\r\n            </div>\r\n            <div>\r\n                <a>News</a>\r\n            </div>\r\n            <div>\r\n                <a>Music</a>\r\n            </div>\r\n            <div>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Navbar;","import React, {useState} from 'react'\r\nimport style from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={style.paginator}>\r\n            {\r\n                portionNumber > 1 &&\r\n                <button onClick={() => {\r\n                    setPortionNumber(portionNumber - 1)\r\n                }}>Prev</button>\r\n            }\r\n            {\r\n                pages\r\n                    .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                    .map(p => {\r\n                        return <span className={cn({\r\n                            [style.selectedPage] : currentPage === p\r\n                        }, style.pageNumber)}\r\n                        key={p}\r\n                        onClick={(e) => {\r\n                            onPageChanged(p);\r\n                        }}\r\n                        >{p}</span>\r\n                    })\r\n            }\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => {setPortionNumber(portionNumber + 1)}}>Next</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;","export default __webpack_public_path__ + \"static/media/person.8719e552.jpg\";","import React from 'react'\r\nimport personPhoto from \"../../assets/images/person.jpg\";\r\nimport style from \"./Users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, follow, unfollow}) => {\r\n  return (\r\n      <div>\r\n        <span>\r\n          <div>\r\n            <NavLink to={`/profile/${user.id}`}>\r\n            <img\r\n                alt={user.name}\r\n                src={user.photos.small ?? personPhoto}\r\n                className={style.userPhoto}\r\n            />\r\n            </NavLink>\r\n          </div>\r\n          <div>\r\n          {\r\n            user.followed ?\r\n                <button\r\n                    disabled={followingInProgress.some(id => id === user.id)}\r\n                    onClick={() => {\r\n                      unfollow(user.id)\r\n                    }\r\n                    }\r\n                >\r\n                  Unfollow\r\n                </button> :\r\n                <button\r\n                    disabled={followingInProgress.some(id => id === user.id)}\r\n                    onClick={() => {\r\n                      follow(user.id)\r\n                    }}\r\n                >\r\n                  Follow\r\n                </button>\r\n          }\r\n          </div>\r\n        </span>\r\n        <span>\r\n            <span>\r\n              <div>{user.name}</div>\r\n              <div>{user.status}</div>\r\n            </span>\r\n            <span>\r\n              <div>{'user.location.country'}</div>\r\n              <div>{'user.location.city'}</div>\r\n            </span>\r\n            </span>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default User;","import React from 'react'\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n          <Paginator \r\n              currentPage={props.currentPage} \r\n              onPageChanged={props.onPageChanged}\r\n              totalItemsCount={props.totalUsersCount}\r\n              pageSize={props.pageSize}\r\n          />\r\n         \r\n            {\r\n                props.users.map((user) =>\r\n                    <User\r\n                        user={user}\r\n                        followingInProgress={props.followingInProgress}\r\n                        follow={props.follow}\r\n                        unfollow={props.unfollow}\r\n                        key={user.id}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","export default __webpack_public_path__ + \"static/media/preloader.e78f8f5d.gif\";","import preloader from \"../../../assets/images/preloader.gif\";\r\n\r\nlet Preloader = () => {\r\n    return (\r\n        <img src={preloader} />\r\n    )\r\n}\r\n\r\nexport default Preloader;","export const FOLLOW = 'FOLLOW';\r\nexport const UNFOLLOW = 'UNFOLLOW';\r\nexport const SET_USERS = 'SET-USERS';\r\nexport const SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nexport const SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\r\nexport const TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\nexport const TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE-IS-FOLLOWING-PROGRESS';\r\n\r\nexport const follow = (userId) => ({\r\n    type: FOLLOW,\r\n    userId: userId\r\n});\r\n\r\nexport const unfollow = (userId) => ({\r\n    type: UNFOLLOW,\r\n    userId: userId\r\n})\r\n\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS,\r\n    users: users\r\n})\r\n\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage: currentPage\r\n})\r\n\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalUsersCount: totalUsersCount\r\n})\r\n\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching: isFetching\r\n})\r\n\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching: isFetching,\r\n    userId: userId\r\n})","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '216aa47e-607d-438c-ba14-210045044b13'\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize)  {\r\n        return instance\r\n            .get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    \r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`).then(response => response.data)\r\n    },\r\n    \r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`).then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userId)  {\r\n        return instance\r\n            .get(`profile/${userId}`).then(response => response.data);\r\n    },\r\n    \r\n    getUserStatus(userId)  {\r\n        return instance\r\n            .get(`profile/status/${userId}`);\r\n    },\r\n\r\n    updateUserStatus(status)  {\r\n        return instance\r\n            .put(`profile/status`, { status });\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance\r\n            .get(`auth/me`).then(response => response.data);\r\n    },\r\n    \r\n    login(email, password, rememberMe = false) {\r\n        return instance\r\n            .post(`auth/login`, {email, password, rememberMe})\r\n            .then(response => response.data);\r\n    },\r\n\r\n    logout(email, password, rememberMe = false) {\r\n        return instance\r\n            .delete(`auth/login`)\r\n            .then(response => response.data);\r\n    }\r\n}","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n  return items.map((item) => {\r\n    if (item[objPropName] === itemId) {\r\n      return {...item, ...newObjProps}\r\n    }\r\n    return item;\r\n  })\r\n};","import {\r\n  FOLLOW,\r\n  follow,\r\n  SET_CURRENT_PAGE,\r\n  SET_TOTAL_USERS_COUNT,\r\n  SET_USERS,\r\n  setCurrentPage,\r\n  setTotalUsersCount,\r\n  setUsers,\r\n  TOGGLE_IS_FETCHING,\r\n  TOGGLE_IS_FOLLOWING_PROGRESS,\r\n  toggleFollowingProgress,\r\n  toggleIsFetching,\r\n  UNFOLLOW,\r\n  unfollow\r\n} from \"../actions/users-actions\";\r\nimport {usersAPI} from \"../../api/api\";\r\nimport {updateObjectInArray} from \"../../utils/object-helpers\";\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalUsersCount: 21,\r\n  currentPage: 1,\r\n  isFetching: true,\r\n  followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW: {\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n      };\r\n    }\r\n    case UNFOLLOW: {\r\n      return {\r\n        ...state,\r\n        //   users: state.users.map((user) => {\r\n        //     if (user.id === action.userId) {\r\n        //       return {...user, followed: false}\r\n        //     }\r\n        //     return user;\r\n        //   })\r\n        // };\r\n        users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n      }\r\n    }\r\n    case SET_USERS: {\r\n      return {\r\n        ...state,\r\n        users: action.users\r\n      };\r\n    }\r\n    case SET_CURRENT_PAGE: {\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage\r\n      }\r\n    }\r\n    case SET_TOTAL_USERS_COUNT: {\r\n      return {\r\n        ...state,\r\n        totalUsersCount: action.totalUsersCount\r\n      }\r\n    }\r\n    case TOGGLE_IS_FETCHING: {\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching\r\n      }\r\n    }\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n            ? [...state.followingInProgress, action.userId]\r\n            : state.followingInProgress.filter(id => id !== action.userId)\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getUserThunkCreator = (users, currentPage, pageSize) => async (dispatch) => {\r\n  dispatch(toggleIsFetching(true));\r\n  if (users.length === 0) {\r\n    let data = await usersAPI.getUsers(currentPage, pageSize)\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n  } else {\r\n    dispatch(toggleIsFetching(false));\r\n  }\r\n}\r\n\r\nexport const changeUserPageThunkCreator = (pageNumber, pageSize) => async (dispatch) => {\r\n  dispatch(toggleIsFetching(true));\r\n  dispatch(setCurrentPage(pageNumber));\r\n  let data = await usersAPI.getUsers(pageNumber, pageSize)\r\n  dispatch(toggleIsFetching(false));\r\n  dispatch(setUsers(data.items));\r\n}\r\n\r\nexport const followThunkCreator = (userId) => async (dispatch) => {\r\n  let apiMethod = usersAPI.follow.bind(usersAPI);\r\n  let actionCreator = follow;\r\n\r\n  followUnfollowFlow(dispatch, userId, apiMethod, actionCreator)\r\n}\r\n\r\nexport const unfollowThunkCreator = (userId) => async (dispatch) => {\r\n  let apiMethod = usersAPI.unfollow.bind(usersAPI);\r\n  let actionCreator = unfollow;\r\n  followUnfollowFlow(dispatch, userId, apiMethod, actionCreator)\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n  dispatch(toggleFollowingProgress(true, userId))\r\n  let response = await apiMethod(userId)\r\n  if (response.resultCode === 0) {\r\n    dispatch(actionCreator(userId));\r\n  }\r\n  dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport default usersReducer;","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsersSuperSelector = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(() => true);\r\n})\r\n\r\nexport const getPageSizeSelector = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getCurrentPageSelector = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getTotalUsersCountSelector = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getIsFetchingSelector = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgressSelector = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import {connect} from \"react-redux\";\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {\r\n    changeUserPageThunkCreator,\r\n    followThunkCreator,\r\n    getUserThunkCreator,\r\n    unfollowThunkCreator\r\n} from \"../../redux/reducers/users-reducer\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPageSelector,\r\n    getFollowingInProgressSelector,\r\n    getIsFetchingSelector,\r\n    getPageSizeSelector, getTotalUsersCountSelector,\r\n    getUsersSelector\r\n} from \"../../redux/selectors/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUserThunkCreator(this.props.users, this.props.currentPage, this.props.pageSize);\r\n    }\r\n    \r\n    onPageChanged = (pageNumber) => {\r\n        this.props.changeUserPageThunkCreator(pageNumber, this.props.pageSize);\r\n    }\r\n    \r\n    follow = (userId) => {\r\n        this.props.followThunkCreator(userId);\r\n    }\r\n    \r\n    unfollow = (userId) => {\r\n        this.props.unfollowThunkCreator(userId);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching && <Preloader/>}\r\n                <Users\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    users={this.props.users}\r\n                    currentPage={this.props.currentPage}\r\n                    unfollow={this.unfollow}\r\n                    follow={this.follow}\r\n                    onPageChanged={this.onPageChanged}\r\n                    toggleIsFetching={this.props.toggleIsFetching}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     }\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSelector(state),\r\n        pageSize: getPageSizeSelector(state),\r\n        totalUsersCount: getTotalUsersCountSelector(state),\r\n        currentPage: getCurrentPageSelector(state),\r\n        isFetching: getIsFetchingSelector(state),\r\n        followingInProgress: getFollowingInProgressSelector(state)\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, {\r\n    getUserThunkCreator,\r\n    changeUserPageThunkCreator,\r\n    followThunkCreator,\r\n    unfollowThunkCreator\r\n}))(UsersContainer);","export const ADD_POST = 'ADD_POST';\r\nexport const SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nexport const SET_USER_STATUS = 'SET-USER-STATUS';\r\nexport const DELETE_POST = 'DELETE-POST';\r\n\r\nexport const addPost = (newPostText) => ({\r\n    type: ADD_POST,\r\n    newPostText\r\n});\r\n\r\nexport const setUserProfile = (userProfile) => ({\r\n    type: SET_USER_PROFILE,\r\n    userProfile: userProfile\r\n})\r\n\r\nexport const setUserStatus = (status) => ({\r\n    type: SET_USER_STATUS,\r\n    status: status\r\n})\r\nexport const deletePost = (postId) => ({\r\n    type: DELETE_POST,\r\n    postId: postId\r\n})\r\n","import c from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={c.item}>\r\n            <img src='https://avatars.mds.yandex.net/i?id=d28115efe89b1ba0e30b74b29b9f81ae-4017487-images-thumbs&n=13&exp=1'/>\r\n            <span>{props.message}</span>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Post;","import './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = (props) => {\r\n    let addPost = (value) => {\r\n        props.addPost(value.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            My posts\r\n            <AddNewPostReduxForm onSubmit={addPost}/>\r\n            {\r\n                props.posts.map(p => <Post key={p.id} message={p.message}/>)\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nconst AddNewPostForm  = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n\r\n                <Field\r\n                    component={Textarea}\r\n                    name='newPostText'\r\n                    placeholder={'placeholder'}\r\n                    validate={[requiredField, maxLength10]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({\r\n    form: 'profileAddNewPostForm'\r\n})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPost} from \"../../../redux/actions/profile-actions\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, \r\n    { addPost })(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status)\r\n    }\r\n\r\n    const onChangeStatus = (e) => {\r\n        setStatus(e.target.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                editMode ?\r\n                    <div>\r\n                        <input\r\n                            autoFocus\r\n                            onBlur={deactivateEditMode}\r\n                            value={status}\r\n                            onChange={onChangeStatus}\r\n                        />\r\n                    </div> :\r\n                    <div>\r\n                        <span onDoubleClick={activateEditMode}>{props.status ?? 'No status'}</span>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n  state = {\r\n    editMode: false,\r\n    status: this.props.status\r\n  }\r\n  deactivateEditMode = (e) => {\r\n    this.setState({\r\n      editMode: false\r\n    })\r\n    this.props.updateUserStatus(this.state.status)\r\n  }\r\n\r\n  activateEditMode = () => {\r\n    this.setState({\r\n      editMode: true\r\n    })\r\n  }\r\n  \r\n  onChangeStatus = (e) => {\r\n    this.setState({\r\n      status: e.target.value\r\n    })\r\n  }\r\n  \r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if(prevProps.status !== this.props.status) {\r\n      this.setState({\r\n        status: this.props.status\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n          {\r\n            this.state.editMode ?\r\n                <div>\r\n                  <input \r\n                      onChange={this.onChangeStatus}\r\n                      autoFocus\r\n                      onBlur={this.deactivateEditMode} \r\n                      value={this.state.status}\r\n                  />\r\n                </div> :\r\n                <div>\r\n                  <span onDoubleClick={this.activateEditMode}>{this.props.status ?? 'No status'}</span>\r\n                </div>\r\n          }\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.userProfile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/*<div>*/}\r\n            {/*    <img src='https://avatars.mds.yandex.net/i?id=ef516ac4f93ccac64b1ab923468c8314-4628472-images-thumbs&n=13&exp=1' />*/}\r\n            {/*</div>*/}\r\n            <div>\r\n                <img src={props.userProfile.photos.large}/>\r\n                {\r\n                    props.personalId === props.userProfile.userId ?\r\n                        <ProfileStatusWithHooks\r\n                            status={props.status}\r\n                            updateUserStatus={props.updateUserStatus}\r\n                        /> :\r\n                        <div>{props.status}</div> \r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo;","import './Profile.module.css';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                personalId={props.personalId}\r\n                userProfile={props.userProfile}\r\n                status={props.status}\r\n                updateUserStatus={props.updateUserStatusThunkCreator}\r\n            />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;","import {\r\n  ADD_POST,\r\n  DELETE_POST,\r\n  SET_USER_PROFILE,\r\n  SET_USER_STATUS,\r\n  setUserProfile,\r\n  setUserStatus\r\n} from \"../actions/profile-actions\";\r\nimport {profileAPI} from \"../../api/api\";\r\n\r\nlet initialState = {\r\n  posts: [\r\n    {id: 1, message: 'Hi how are you doing?', likesCount: 11},\r\n    {id: 2, message: 'This is my first post', likesCount: 15}\r\n  ],\r\n  userProfile: null,\r\n  status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      let newPost = {\r\n        id: 5,\r\n        message: action.newPostText,\r\n        likesCount: 0\r\n      };\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, newPost]\r\n      }\r\n    }\r\n    case SET_USER_PROFILE: {\r\n      return {\r\n        ...state,\r\n        userProfile: action.userProfile\r\n      }\r\n    }\r\n    case SET_USER_STATUS: {\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      }\r\n    }\r\n    case DELETE_POST: {\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(post => post.id !== action.postId)\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getUserProfileThunkCreator = (userId) => async (dispatch) => {\r\n  let response = await profileAPI.getUserProfile(userId)\r\n  dispatch(setUserProfile(response));\r\n}\r\n\r\n\r\nexport const getUserStatusThunkCreator = (userId) => async (dispatch) => {\r\n  let response = await profileAPI.getUserStatus(userId)\r\n  dispatch(setUserStatus(response.data));\r\n}\r\n\r\n\r\nexport const updateUserStatusThunkCreator = (status) => async (dispatch) => {\r\n  let response = await profileAPI.updateUserStatus(status)\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setUserStatus(status));\r\n  }\r\n}\r\n\r\nexport default profileReducer;","import './Profile.module.css';\r\nimport React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate, useParams} from 'react-router';\r\nimport {\r\n    getUserProfileThunkCreator,\r\n    getUserStatusThunkCreator,\r\n    updateUserStatusThunkCreator\r\n} from \"../../redux/reducers/profile-reducer\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileObtained extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUserProfileThunkCreator(this.props.userId);\r\n        this.props.getUserStatusThunkCreator(this.props.userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nconst ProfileContainer = (props) => {\r\n    let {userId} = useParams();\r\n    userId = userId ?? props.personalId;\r\n    return (\r\n        <ProfileObtained {...props} userId={userId} />\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        userProfile: state.profilePage.userProfile,\r\n        isAuth: state.auth.isAuth,\r\n        personalId: state.auth.userId,\r\n        status: state.profilePage.status\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUserProfileThunkCreator,\r\n        getUserStatusThunkCreator,\r\n        updateUserStatusThunkCreator}), withAuthRedirect\r\n)(ProfileContainer);\r\n","import style from './Header.module.css';\r\nimport {Navigate, NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    let logout = () => {\r\n        props.logoutThunkCreator();\r\n        if(!props.isAuth) {\r\n            return <Navigate to={'/login'} />\r\n        }\r\n    }\r\n    return (\r\n        <header className={style.header}>\r\n            <img src='https://images.vexels.com/media/users/3/140527/isolated/preview/449b95d58f554656b159dd3ca21ab123-home-round-icon.png' />\r\n            <div className={style.loginBlock}>\r\n                {props.isAuth ? <div>{props.login} - <button onClick={logout}>Logout</button></div> : <NavLink to={'/login'} >Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","export const SET_USER_DATA = 'SET--USER-DATA';\r\n\r\nexport const setUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    data: { userId, email, login, isAuth }\r\n});","import {SET_USER_DATA, setUserData} from \"../actions/auth-actions\";\r\nimport {authAPI} from \"../../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n  isFetching: true\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA: {\r\n      return {\r\n        ...state,\r\n        ...action.data\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getMeThunkCreator = () => {\r\n  return async (dispatch) => {\r\n    let response = await authAPI.me()\r\n\r\n    if (response.resultCode === 0) {\r\n      const {id, email, login} = response.data;\r\n      dispatch(setUserData(id, email, login, true));\r\n    }\r\n  }\r\n}\r\n\r\nexport const loginThunkCreator = (email, password, rememberMe) => {\r\n  return async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n\r\n    if (response.resultCode === 0) {\r\n      dispatch(getMeThunkCreator());\r\n    } else {\r\n      let message = response.messages.length > 0 ? response.messages[0] : 'Some error';\r\n      dispatch(stopSubmit('login', {_error: message}));\r\n    }\r\n  }\r\n}\r\n\r\nexport const logoutThunkCreator = () => {\r\n  return async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    \r\n    if (response.resultCode === 0) {\r\n      dispatch(setUserData(null, null, null, false));\r\n    }\r\n  }\r\n}\r\n\r\nexport default authReducer;","import Header from \"./Header\";\r\nimport React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {logoutThunkCreator} from \"../../redux/reducers/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component{\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth, \r\n        login: state.auth.login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {logoutThunkCreator})(HeaderContainer);","import {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {requiredField} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginThunkCreator} from \"../../redux/reducers/auth-reducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport style from '../common/FormsControls/FormsControls.module.css'\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    placeholder={'Email'}\r\n                    name={'email'}\r\n                    component={Input}\r\n                    validate={[requiredField]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field \r\n                    placeholder={'Password'} \r\n                    name={'password'} \r\n                    component={Input}\r\n                    validate={[requiredField]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field \r\n                    type={'checkbox'}\r\n                    name={'rememberMe'} \r\n                    component={Input} \r\n                /> remember me\r\n            </div>\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n            {\r\n                error &&\r\n                <div className={style.errorSummary}>\r\n                    {error}\r\n                </div>\r\n            }\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.loginThunkCreator(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    \r\n    if(props.isAuth) {\r\n        return <Navigate to={'/profile'} />\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <h1>LOGIN</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {loginThunkCreator})(Login);","export const SET_INITIALIZED_SUCCESS = 'SET-INITIALIZED-SUCCESS';\r\n\r\nexport const initializedSuccess = () => ({\r\n    type: SET_INITIALIZED_SUCCESS\r\n});","import {initializedSuccess, SET_INITIALIZED_SUCCESS} from \"../actions/app-actions\";\r\nimport {getMeThunkCreator} from \"./auth-reducer\";\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializeApp = () => {\r\n    return (dispatch) => {\r\n        let promiseResult = dispatch(getMeThunkCreator())\r\n        promiseResult.then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n    }\r\n}\r\n\r\nexport default appReducer;","import React from 'react'\r\nimport './App.css';\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport {Navigate, Route, Routes} from \"react-router-dom\";\r\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/reducers/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\n// const ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n// const UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\n// const HeaderContainer = React.lazy(() => import('./components/Header/HeaderContainer'));\r\n\r\nconst SuspenseDialogs = withSuspense(DialogsContainer);\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.initialized) {\r\n            return <Preloader />\r\n        }\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Routes>\r\n                        <Route\r\n                            path='/dialogs'\r\n                            element={<SuspenseDialogs />}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path='/profile'\r\n                            element={<ProfileContainer/>}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path='/profile/:userId'\r\n                            element={<ProfileContainer/>}\r\n                        />\r\n                        <Route\r\n                            path='/users'\r\n                            element={<UsersContainer/>}\r\n                        />\r\n                        <Route\r\n                            path='/login'\r\n                            element={<Login/>}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path='/'\r\n                            element={<Navigate to={'/profile'}/>}\r\n                        />\r\n                    </Routes>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nexport default compose(connect(mapStateToProps, {initializeApp}))(App);\r\n","import {SEND_MESSAGE} from \"../actions/dialog-actions\";\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Aliaksei'},\r\n        {id: 2, name: 'Victor'},\r\n        {id: 3, name: 'Carlos'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How are you?'},\r\n        {id: 3, message: 'What`s up?'}\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            let newMessage = {\r\n                id: 4,\r\n                message: action.newMessageBody,\r\n            };\r\n            \r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default dialogsReducer;","let initialState = {}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./reducers/profile-reducer\";\r\nimport dialogsReducer from \"./reducers/dialogs-reducer\";\r\nimport sidebarReducer from \"./reducers/sidebar-reducer\";\r\nimport usersReducer from \"./reducers/users-reducer\";\r\nimport authReducer from \"./reducers/auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./reducers/app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\nwindow.store = store;\r\n\r\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/redux-store'\nimport {BrowserRouter} from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {Provider} from \"react-redux\";\n\nlet rerenderEntireTree = () => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <BrowserRouter>\n                <Provider store={store}>\n                    <App />\n                </Provider>\n            </BrowserRouter>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\n\nrerenderEntireTree();\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const requiredField = value => {\r\n    if(value) {\r\n        return undefined;\r\n    }\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n    if(value && value.length > maxLength) {\r\n        return `Max length is ${maxLength} symbols`;\r\n    }\r\n    \r\n    return undefined;\r\n}","import style from './FormsControls.module.css'\r\n\r\nconst FormControl = ({input, meta, FormType, ...props}) => {\r\n    const hasError = meta.error && meta.touched\r\n    return (\r\n        <div className={style.formControl + ' ' + (hasError && style.error)}>\r\n            <div>\r\n                <FormType {...input} {...props} />\r\n            </div>\r\n            {\r\n                hasError && <span>{meta.error}</span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    return <FormControl {...props} FormType='textarea'></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    return <FormControl {...props} FormType='input'></FormControl>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__26toA\",\"error\":\"FormsControls_error__1v9Jh\",\"errorSummary\":\"FormsControls_errorSummary__oS3rW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageNumber\":\"Paginator_pageNumber__1Vo4s\",\"selectedPage\":\"Paginator_selectedPage__TCgh1\",\"paginator\":\"Paginator_paginator__1g0Yw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__21UJz\",\"activeLink\":\"Navbar_activeLink__1z9gJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3XUqj\",\"loginBlock\":\"Header_loginBlock__prSFl\"};"],"sourceRoot":""}